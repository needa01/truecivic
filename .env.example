# =============================================================================
# Parliament Explorer - Environment Configuration Template
# =============================================================================
# Copy this file to `.env` and fill in your actual values.
# Never commit `.env` to version control (already in .gitignore).
#
# This file demonstrates all available configuration options for:
# - Database (SQLite for local, PostgreSQL for production)
# - Redis cache (optional)
# - Kafka message queue (future use)
# - API rate limiting and external services
# - Logging and monitoring
# =============================================================================

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# Choose one configuration profile based on your environment:
# - Local development: SQLite (default, no additional setup)
# - Production: PostgreSQL (recommended for Railway, Render, etc.)
# -----------------------------------------------------------------------------

# Option 1: Local Development (PostgreSQL + pgvector) - DEFAULT
# -------------------------------------------------------------
# Point to your local PostgreSQL instance. pgvector must be installed
# and enabled (CREATE EXTENSION IF NOT EXISTS vector;).

# DB_DRIVER=postgresql+asyncpg
# DB_HOST=localhost
# DB_PORT=5432
# DB_DATABASE=parliament_explorer
# DB_USERNAME=postgres
# DB_PASSWORD=postgres

# Option 2: Production (PostgreSQL on Railway/Render/etc.)
# ---------------------------------------------------------
# Replace these with your actual PostgreSQL credentials.
# Railway provides these as environment variables automatically.
# 
# For pgvector support, ensure the extension is enabled:
# CREATE EXTENSION IF NOT EXISTS vector;

# DB_DRIVER=postgresql+asyncpg
# DB_HOST=your-postgres-host.railway.app
# DB_PORT=5432
# DB_DATABASE=railway
# DB_USERNAME=postgres
# DB_PASSWORD=your-secure-password-here

# Alternative: Use DATABASE_PUBLIC_URL (for application database)
# DATABASE_PUBLIC_URL=postgresql://postgres:password@host:port/railway

# Database Connection Pool Settings (optional, has sensible defaults)
# DB_POOL_SIZE=5
# DB_MAX_OVERFLOW=10
# DB_POOL_TIMEOUT=30
# DB_POOL_RECYCLE=3600

# Database Query Logging (set to true for debugging)
# DB_ECHO=false
# DB_ECHO_POOL=false

# -----------------------------------------------------------------------------
# REDIS CACHE CONFIGURATION
# -----------------------------------------------------------------------------
# Redis caching for Prefect result backend and API response caching.
# Required for production Prefect deployments.
# -----------------------------------------------------------------------------

# Redis Connection URL (Railway format - recommended)
# REDIS_URL=redis://default:password@host:port

# Alternative: Individual settings
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_DB=0
# REDIS_PASSWORD=your-redis-password  # Leave empty for no auth
# REDISUSER=default
# REDISPASSWORD=your-redis-password

# Cache TTL Settings (seconds)
# REDIS_CACHE_TTL=300         # 5 minutes default
# REDIS_DEFAULT_TTL=3600      # 1 hour
# REDIS_BILL_TTL=21600        # 6 hours
# REDIS_POLITICIAN_TTL=86400  # 24 hours

# -----------------------------------------------------------------------------
# KAFKA MESSAGE QUEUE CONFIGURATION
# -----------------------------------------------------------------------------
# Kafka for event streaming and real-time data processing.
# Used for bill updates, politician changes, and system events.
# -----------------------------------------------------------------------------

# Kafka Connection URL (Railway format)
# KAFKA_PUBLIC_URL=host:port

# Alternative: Bootstrap servers
# KAFKA_BOOTSTRAP_SERVERS=localhost:9092
# KAFKA_GROUP_ID=parliament-explorer
# KAFKA_AUTO_OFFSET_RESET=earliest

# -----------------------------------------------------------------------------
# MINIO / S3-COMPATIBLE OBJECT STORAGE
# -----------------------------------------------------------------------------
# Object storage for raw API responses, processed data, and backups.
# Supports MinIO, AWS S3, or any S3-compatible service.
# -----------------------------------------------------------------------------

# MinIO Connection (Railway/Production)
# MINIO_ENDPOINT=your-bucket-service.up.railway.app  # Without http://
# MINIO_ACCESS_KEY=your-access-key
# MINIO_SECRET_KEY=your-secret-key
# MINIO_SECURE=true  # Use HTTPS (true for production)

# Bucket Names
# MINIO_BUCKET_RAW=parl-raw-prod             # Raw API responses
# MINIO_BUCKET_PROCESSED=parl-processed-prod # Cleaned/transformed data
# MINIO_BUCKET_BACKUPS=backups-prod          # Database backups

# MinIO Local Development
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_SECURE=false
MINIO_BUCKET_RAW=parl-raw
MINIO_BUCKET_PROCESSED=parl-processed
MINIO_BUCKET_BACKUPS=backups

# -----------------------------------------------------------------------------
# PREFECT ORCHESTRATION CONFIGURATION
# -----------------------------------------------------------------------------
# Prefect handles workflow orchestration and scheduling.
# Choose between Prefect Cloud (managed) or self-hosted server.
# 
# Validated Services:
# - Prefect Server API (orchestration)
# - Prefect Metadata DB (PostgreSQL - stores flow/deployment metadata)
# -----------------------------------------------------------------------------

# Prefect Server Configuration
# PORT=4200  # Port for Prefect server
# PREFECT_SERVER_API_HOST=0.0.0.0
# PREFECT_SERVER_API_PORT=4200

# Option 1: Prefect Cloud (Recommended for Production)
# -----------------------------------------------------
# PREFECT_API_URL=https://api.prefect.cloud/api/accounts/{account_id}/workspaces/{workspace_id}
# PREFECT_API_KEY=your_prefect_cloud_api_key

# Option 2: Self-Hosted Prefect Server (Railway/Local)
# ------------------------------------------------------
# Local development
# PREFECT_API_URL=http://127.0.0.1:4200/api

# Railway/production (replace with your Railway deployment URL)
# PREFECT_API_URL=https://your-prefect-server.up.railway.app/api
# PREFECT_UI_URL=https://your-prefect-server.up.railway.app

# Prefect Metadata Database (Separate PostgreSQL instance - Postgres-XOqe)
# Stores flow runs, task runs, deployments, and orchestration metadata
# PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://postgres:password@host:port/railway

# Prefect Worker Configuration
# PREFECT_WORKER_POOL_NAME=default-agent-pool
# PREFECT_WORKER_QUERY_INTERVAL=5  # seconds

# Legacy Dagster (deprecated - migrated to Prefect)
# --------------------------------------------------
DAGSTER_POSTGRES_HOST=localhost
DAGSTER_POSTGRES_PORT=5432
DAGSTER_POSTGRES_DB=dagster
DAGSTER_POSTGRES_USER=dagster
DAGSTER_POSTGRES_PASSWORD=dagster

# -----------------------------------------------------------------------------
# APPLICATION CONFIGURATION
# -----------------------------------------------------------------------------
# Core application settings including CORS, workers, and environment.
# -----------------------------------------------------------------------------

# Application Environment
# APP_ENVIRONMENT=local  # Options: local, development, staging, production
# APP_DEBUG=true
# APP_LOG_LEVEL=INFO
# APP_REQUIRE_API_KEY=true  # Set false for local development to bypass auth middleware

# API Configuration
# APP_API_HOST=0.0.0.0
# APP_API_PORT=8000
# APP_API_WORKERS=1

# CORS Configuration - Security Critical
# Comma-separated list of allowed origins for API access.
# For production, list ONLY your actual frontend domains.
# Default includes common local development ports.
APP_CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# Examples for production:
# APP_CORS_ORIGINS=https://truecivic.com,https://www.truecivic.com,https://app.truecivic.com

# Data Refresh Intervals (seconds)
# APP_BILL_REFRESH_INTERVAL=3600      # 1 hour
# APP_POLITICIAN_REFRESH_INTERVAL=86400  # 24 hours

# Legacy settings (kept for backward compatibility)
API_BASE_URL=http://localhost:8000
API_RATE_LIMIT_ENABLED=true
API_WORKERS=4

# OpenParliament API (Canada)
OPENPARLIAMENT_API_BASE=https://api.openparliament.ca
OPENPARLIAMENT_RATE_LIMIT=100
OPENPARLIAMENT_TIMEOUT=30

# LEGISinfo Scraping
LEGISINFO_BASE_URL=https://www.parl.ca/legisinfo
LEGISINFO_RATE_LIMIT=60
LEGISINFO_USER_AGENT=ParliamentExplorer/1.0

# Hansard
HANSARD_BASE_URL=https://www.ourcommons.ca/DocumentViewer
HANSARD_RATE_LIMIT=60

# LLM / Embeddings
OPENAI_API_KEY=sk-your-key-here
OPENAI_MODEL=gpt-4-turbo-preview
OPENAI_EMBEDDING_MODEL=text-embedding-3-small
OPENAI_MAX_TOKENS=4096
OPENAI_TEMPERATURE=0.3

# Alternative: Anthropic
ANTHROPIC_API_KEY=
ANTHROPIC_MODEL=claude-3-sonnet-20240229

# RSS Feed Configuration
RSS_CACHE_TTL=300
RSS_MAX_ITEMS=50
RSS_REBUILD_WINDOW=12
RSS_RATE_LIMIT_IP=60
RSS_RATE_LIMIT_TOKEN=30
RSS_GLOBAL_LIMIT=1000

# Rate Limiting
RATE_LIMIT_ANONYMOUS_DAILY=600
RATE_LIMIT_BURST_PER_MIN=60
RATE_LIMIT_ENTITY_DETAIL_HOURLY=120
RATE_LIMIT_GRAPH_HOURLY=60
RATE_LIMIT_SEARCH_HOURLY=120

# Security
SECRET_KEY=your-secret-key-here-change-in-production
JWT_ALGORITHM=HS256
ALLOWED_HOSTS=localhost,127.0.0.1

# Monitoring
SENTRY_DSN=
LOG_LEVEL=INFO
ENABLE_METRICS=true
METRICS_PORT=9090

# Feature Flags
ENABLE_GRAPHQL=true
ENABLE_RSS_FEEDS=true
ENABLE_PERSONALIZATION=true
DEFAULT_JURISDICTION=ca-federal

# Timezone
TZ=America/Toronto

# =============================================================================
# CURRENTLY IMPLEMENTED CONFIGURATION (as of v0.2.0)
# =============================================================================
# The above variables are planned for future features. The current implementation
# uses a simpler Pydantic Settings-based configuration from src/config.py.
#
# Actively used environment variables (see src/config.py):
# -----------------------------------------------------------------------------
# 
# DATABASE (DatabaseConfig):
#   DB_DRIVER=postgresql+asyncpg
#   DB_HOST, DB_PORT, DB_DATABASE, DB_USERNAME, DB_PASSWORD
#   DB_POOL_SIZE, DB_MAX_OVERFLOW, DB_POOL_TIMEOUT, DB_POOL_RECYCLE
#   DB_ECHO, DB_ECHO_POOL
#
# REDIS (RedisConfig):
#   REDIS_ENABLED, REDIS_HOST, REDIS_PORT, REDIS_DB, REDIS_PASSWORD
#   REDIS_MAX_CONNECTIONS, REDIS_SOCKET_TIMEOUT, REDIS_SOCKET_CONNECT_TIMEOUT
#   REDIS_DEFAULT_TTL, REDIS_BILL_TTL, REDIS_POLITICIAN_TTL
#
# KAFKA (KafkaConfig):
#   KAFKA_ENABLED, KAFKA_BOOTSTRAP_SERVERS, KAFKA_GROUP_ID, KAFKA_AUTO_OFFSET_RESET
#
# See .env.example above for detailed descriptions and example values.
# =============================================================================

# =============================================================================
# IMPORTANT SECURITY NOTES
# =============================================================================
# 1. **Never commit `.env` files** with real credentials to version control.
# 2. Use **strong passwords** for database and Redis in production.
# 3. Enable **SSL/TLS** for PostgreSQL and Redis connections in production.
# 4. Use **environment-specific credentials** (different for dev/staging/prod).
# 5. Rotate passwords regularly and use secrets managers (e.g., Railway vars).
# 6. Review Railway's "Service Variables" for auto-provided database URLs.
# =============================================================================
